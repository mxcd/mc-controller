apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mc-controller.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
    app.kubernetes.io/component: manager
    {{- include "mc-controller.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "mc-controller.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- include "mc-controller.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mc-controller.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        image: {{ include "mc-controller.image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        - --leader-elect={{ .Values.leaderElection.enabled }}
        - --metrics-bind-address=0.0.0.0:{{ .Values.metrics.port }}
        - --health-probe-bind-address=0.0.0.0:{{ .Values.health.port }}
        {{- if .Values.webhook.enabled }}
        - --webhook-port={{ .Values.webhook.port }}
        {{- end }}
        {{- range .Values.env }}
        env:
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.metrics.port }}
          name: metrics
          protocol: TCP
        - containerPort: {{ .Values.health.port }}
          name: health
          protocol: TCP
        {{- if .Values.webhook.enabled }}
        - containerPort: {{ .Values.webhook.port }}
          name: webhook-server
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        {{- end }}
        {{- with .Values.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "mc-controller.fullname" . }}-webhook-server-cert
      {{- end }}
      {{- with .Values.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}