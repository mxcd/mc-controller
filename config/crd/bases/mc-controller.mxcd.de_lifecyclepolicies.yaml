---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: lifecyclepolicies.mc-controller.mxcd.de
spec:
  group: mc-controller.mxcd.de
  names:
    kind: LifecyclePolicy
    listKind: LifecyclePolicyList
    plural: lifecyclepolicies
    shortNames:
    - lifecycle
    singular: lifecyclepolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .status.bucketName
      name: Bucket
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LifecyclePolicy is the Schema for the lifecyclepolicies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LifecyclePolicySpec defines the desired state of LifecyclePolicy
            properties:
              bucketName:
                description: BucketName is the name of the bucket to apply the lifecycle
                  policy to
                type: string
              connection:
                description: Connection defines connection details to MinIO
                properties:
                  aliasRef:
                    description: AliasRef references an Alias resource for connection
                      details
                    properties:
                      name:
                        description: Name is the name of the Alias resource
                        type: string
                      namespace:
                        description: Namespace is the namespace of the Alias resource
                        type: string
                    required:
                    - name
                    type: object
                  endpointRef:
                    description: EndpointRef references an Endpoint resource for connection
                      details (deprecated, use aliasRef)
                    properties:
                      name:
                        description: Name is the name of the Endpoint resource
                        type: string
                      namespace:
                        description: Namespace is the namespace of the Endpoint resource
                        type: string
                    required:
                    - name
                    type: object
                  secretRef:
                    description: SecretRef contains credentials for connecting to
                      MinIO (only used with URL)
                    properties:
                      accessKeyIDKey:
                        description: AccessKeyIDKey is the key in the secret containing
                          the access key ID
                        type: string
                      name:
                        description: Name is the name of the secret
                        type: string
                      namespace:
                        description: Namespace is the namespace of the secret
                        type: string
                      secretAccessKeyKey:
                        description: SecretAccessKeyKey is the key in the secret containing
                          the secret access key
                        type: string
                    required:
                    - name
                    type: object
                  tls:
                    description: TLS configuration (only used with URL)
                    properties:
                      caBundle:
                        description: CABundle is a PEM encoded CA bundle which will
                          be used to validate the server certificate
                        format: byte
                        type: string
                      insecure:
                        description: Insecure allows connections to MinIO using TLS
                          without certs validation
                        type: boolean
                    type: object
                  url:
                    description: URL is the MinIO server URL (alternative to AliasRef/EndpointRef)
                    type: string
                type: object
              rules:
                description: Rules define the lifecycle rules
                items:
                  description: LifecycleRule defines a single lifecycle rule
                  properties:
                    abortIncompleteMultipartUpload:
                      description: AbortIncompleteMultipartUpload defines when to
                        abort incomplete multipart uploads
                      properties:
                        daysAfterInitiation:
                          description: DaysAfterInitiation is the number of days after
                            initiation
                          type: integer
                      required:
                      - daysAfterInitiation
                      type: object
                    expiration:
                      description: Expiration defines when objects expire
                      properties:
                        date:
                          description: Date is the expiration date
                          format: date-time
                          type: string
                        days:
                          description: Days is the number of days after creation when
                            objects expire
                          type: integer
                        expiredObjectDeleteMarker:
                          description: ExpiredObjectDeleteMarker indicates whether
                            to remove delete markers
                          type: boolean
                      type: object
                    filter:
                      description: Filter defines the filter for objects to apply
                        the rule to
                      properties:
                        and:
                          description: And allows combining multiple filters
                          properties:
                            prefix:
                              description: Prefix is the object key prefix
                              type: string
                            tags:
                              additionalProperties:
                                type: string
                              description: Tags is a list of tags to match
                              type: object
                          type: object
                        prefix:
                          description: Prefix is the object key prefix
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a list of tags to match
                          type: object
                      type: object
                    id:
                      description: ID is the unique identifier for the rule
                      type: string
                    noncurrentVersionExpiration:
                      description: NoncurrentVersionExpiration defines when non-current
                        versions expire
                      properties:
                        noncurrentDays:
                          description: NoncurrentDays is the number of days after
                            becoming non-current when versions expire
                          type: integer
                      required:
                      - noncurrentDays
                      type: object
                    noncurrentVersionTransitions:
                      description: NoncurrentVersionTransitions define transitions
                        for non-current versions
                      items:
                        description: NoncurrentVersionTransition defines storage class
                          transition for non-current versions
                        properties:
                          noncurrentDays:
                            description: NoncurrentDays is the number of days after
                              becoming non-current when versions transition
                            type: integer
                          storageClass:
                            description: StorageClass is the storage class to transition
                              to
                            type: string
                        required:
                        - noncurrentDays
                        - storageClass
                        type: object
                      type: array
                    status:
                      description: Status indicates whether the rule is enabled or
                        disabled
                      type: string
                    transitions:
                      description: Transitions define storage class transitions
                      items:
                        description: LifecycleTransition defines storage class transition
                        properties:
                          date:
                            description: Date is the transition date
                            format: date-time
                            type: string
                          days:
                            description: Days is the number of days after creation
                              when objects transition
                            type: integer
                          storageClass:
                            description: StorageClass is the storage class to transition
                              to
                            type: string
                        required:
                        - storageClass
                        type: object
                      type: array
                  required:
                  - id
                  - status
                  type: object
                type: array
            required:
            - bucketName
            - connection
            - rules
            type: object
          status:
            description: LifecyclePolicyStatus defines the observed state of LifecyclePolicy
            properties:
              appliedAt:
                description: AppliedAt is when the policy was applied
                format: date-time
                type: string
              bucketName:
                description: BucketName is the actual bucket name in MinIO
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  of the lifecycle policy's state
                items:
                  description: Condition represents the condition of a resource
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating
                        details about the transition
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason
                        for the condition's last transition
                      type: string
                    status:
                      description: Status is the status of the condition
                      type: string
                    type:
                      description: Type is the type of the condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              lastSyncTime:
                description: LastSyncTime is the last time the resource was synchronized
                format: date-time
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  by the controller
                format: int64
                type: integer
              policyHash:
                description: PolicyHash is the hash of the policy for comparison
                type: string
              ready:
                description: Ready indicates if the lifecycle policy is ready
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
